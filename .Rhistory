my_char <- c("My","name","is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Wendy")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X","Y","Z"), sep = " ")
paste(1:3, c("X","Y","Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm (1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical (vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)()
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matric <- my_vector
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20,4,5)
identical (my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", , "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames, my_data)
colnames(my_data) <- cnames
my_data
TRUE ==TRUE
(FALSE == TRUE) == FALSE
6 ==7
6<7
10 <= 10
5 != 7
5 != 7
5 !== 7
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6!= 8 && 4 > 3.9
isTRUE(6>4)
identical('twins','twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function()
boring_function
submit()
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd(c(1.4, 3.6, 7.9, 8.8)))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[3]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("hello", "world")
submit()
submit()
mad_libs("Boston", "Harvard", "ban")
submit()
'I' %p% 'love' %p% 'R!'
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- strptime("October 17, 1986 -8:24")
t3 <- strptime("October 17, 1986 08:24")
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = "days")
getwd
getwd()
setwd(/Users/williawe/Documents/DataScience)
setwd("/Users/williawe/Documents/DataScience")
getwd()
dir.create("specdata")
ls()
read.csv(specdata)
read.csv("specdata")
specdata
setwd(specdata)
setwd("/Users/williawe/Documents/DataScience/specdata"")
""
getwd()
?dir.create
?read.csv
setwd (file.path(getwd(), directory))
setwd (file.path(getwd(), specdata))
ls
ls()
getwd()
list.files()
list.files("specdata")
?list.files
swirl()
pollutantmean <- function(directory, pollutant, id=1:332)
#list of files
pollutionfiles <- list.files(path = directory, pattern = ".csv", full.names = TRUE)
#empty data frame
pollutiondata <- numeric()
for (i in id) {
data <- read.csv(pollutionfiles[i])
pollutiondata <- c(pollutiondata,data[[pollutant]])
}
mean(pollutiondata, na.rm = TRUE)
}
pollutantmean("users/williawe/Documents/DataScience/specdata/", "sulfate")
pollutantmean <- function(directory, pollutant, id=1:332)
#list of files
pollutionfiles <- list.files(path = directory, pattern = ".csv", full.names = TRUE)
#empty data frame
pollutiondata <- numeric()
for (i in id) {
data <- read.csv(pollutionfiles[i])
pollutiondata <- c(pollutiondata,data[[pollutant]])
}
mean(pollutiondata, na.rm = TRUE)
}
pollutantmean("users/williawe/Documents/DataScience/specdata/", "sulfate")
pollutantmean <- function(directory, pollutant, id=1:332) {
pollutionfiles <- list.files(path = directory, pattern = ".csv", full.names = TRUE)
pollutiondata <- data.frame()
for(i in id) {
temp <-read.csv(pollutionfiles[i], header = TRUE)
pollutiondata <- rbind(pollutiondata, temp)
}
return(mean(pollutiondata[pollutant], na.rm = TRUE))
}
pollutantmean("users/williawe/Documents/DataScience/specdata/", "sulfate")
source("users/williawe/Documents/DataScience/specdata/")
getwd()
listfiles()
list.files()
read("specdata")
read.csv("specdata")
read.csv("users/williawe/Documents/DataScience/specdata/001.csv")
?source
source("users/williawe/Documents/DataScience/specdata/001.csv")
source("users/williawe/Documents/DataScience/specdata/")
list.files("specdata")
001.csv
read.csv(001.csv)
read.csv("001.csv"")
""
read.csv("001.csv)
""
)
"
read.csv("001.csv")
?source
source("users/williawe/Documents/DataScience/specdata/001.csv", local = TRUE)
source("/Users/williawe/Documents/DataScience/specdata/001.csv")
source("/Users/williawe/Documents/DataScience/specdata/")
data1 <- read.csv ("001.csv")
?read.csv
read.csv("~/Documents/DataScience/specdata/001.csv")
data1 <- read.csv("~/Documents/DataScience/specdata/001.csv")
data1
head(data1)
list.files("~/Documents/DataScience/specdata/", pattern = ".csv", full.names = TRUE)
pollutantmean("users/williawe/Documents/DataScience/specdata/", "sulfate")
for (i in id) {
data <- read.csv(pollutionfiles[i])
pollutiondata <- c(pollutiondata,data[[pollutant]])
mean(pollutiondata, na.rm = TRUE)
}
pollutantmean <- function(directory, pollutant, id=1:332) {
#list of files
pollutionfiles <- list.files("~/Documents/DataScience/specdata/", pattern = ".csv", full.names = TRUE)
#empty data frame
pollutiondata <- data.frame()
#create a for loop to go through list of files until id is found for (i in id)
for(i in id) {
tempdata <- read.csv(pollutionfiles[i], header = TRUE)
pollutiondata <- rbind(pollutiondata,tempdata)
#find mean of the pollutant, removing NA values
}
mean(pollutiondata, na.rm = TRUE)
}
pollutantmean("~/Documents/DataScience/specdata/", "sulfate")
pollutantmean <- function(directory, pollutant, id=1:332) {
#list of files
pollutionfiles <- list.files("~/Documents/DataScience/specdata/", pattern = ".csv", full.names = TRUE)
#empty data frame
pollutiondata <- data.frame()
#create a for loop to go through list of files until id is found for (i in id)
for(i in id) {
tempdata <- read.csv(pollutionfiles[i], header = TRUE)
pollutiondata <- rbind(pollutiondata,tempdata)
#find mean of the pollutant, removing NA values
}
mean(pollutiondata, na.rm = TRUE)
}
pollutantmean <- function(directory, pollutant, id=1:332) {
#list of files
pollutionfiles <- list.files(directory, pattern = ".csv", full.names = TRUE)
#empty data frame
pollutiondata <- data.frame()
#create a for loop to go through list of files until id is found for (i in id)
for(i in id) {
tempdata <- read.csv(pollutionfiles[i], header = TRUE)
pollutiondata <- rbind(pollutiondata,tempdata)
#find mean of the pollutant, removing NA values
}
mean(pollutiondata, na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id=1:332) {
#list of files
pollutionfiles <- list.files(directory, pattern = ".csv", full.names = TRUE)
#empty data frame
pollutiondata <- numeric()
#create a for loop to go through list of files until id is found for (i in id)
for(i in id) {
tempdata <- read.csv(pollutionfiles[i], header = TRUE)
pollutiondata <- rbind(pollutiondata,tempdata)
#find mean of the pollutant, removing NA values
}
mean(pollutiondata, na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id=1:332) {
#list of files
pollutionfiles <- list.files(path = directory, pattern = ".csv", full.names = TRUE)
#empty data frame
pollutiondata <- numeric()
#create a for loop to go through list of files until id is found for (i in id)
for(i in id) {
tempdata <- read.csv(pollutionfiles[i], header = TRUE)
pollutiondata <- c(pollutiondata,tempdata[[pollutant]])
#find mean of the pollutant, removing NA values
}
mean(pollutiondata, na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source('~/Documents/DataScience/Week 2 Assignment 1.R')
source('~/Documents/DataScience/Week 2 Assignment 1.R')
pollutantmean("specdata", "nitrate", 23)
getwd()
read.csv("specdata/001.csv")
data <- read.csv("specdata/001.csv")
data
complete.cases
complete.cases(data)
sum(complete.cases(data))
list.files(path="specdata", pattern=".csv")
fileslist <- list.files(path="specdata", pattern=".csv")
length(fileslist)
fileslist <- list.files(path="specdata", pattern=".csv", full.names = TRUE)
fileslist
sum(complete.cases(read.csv(fileslist[1])))
data.frame(id, nobs)
complete <- function(directory, id = 1:332) {
## return dataframe where nobs(number of complete cases) is given for every id
## complete.cases function return TRUE/FALSE values for complete cases - sum to get number of complete cases
## list.files(path = "", pattern = "", full.names = TRUE)
fileslist <- list.files(path = directory, pattern = ".csv", full.names = TRUE)
nobs <- numeric()
for (i in id){
data < read.csv(fileslist[1])
nobs <- c(nobs, sum(complete.cases(data)))
}
data.frame(id, nobs)
}
complete("specdata", 1)
complete("specdata", c(2,4,8,10,12))
source('~/Documents/DataScience/Week 2 Assignment 1.2.R')
complete("specdata", c(2,4,8,10,12))
complete("specdata", c(1,2))
source('~/Documents/DataScience/Week 2 Assignment 1.2.R')
source('~/Documents/DataScience/Week 2 Assignment 1.2.R')
complete("specdata", c(1,2))
source('~/Documents/DataScience/Week 2 Assignment 1.2.R')
complete("specdata", c(1,2))
source('~/Documents/DataScience/Week 2 Assignment 1.2.R')
source('~/Documents/DataScience/Week 2 Assignment 1.2.R')
complete("specdata", c(1,2))
complete <- function(directory, id = 1:332) {
## return dataframe where nobs(number of complete cases) is given for every id
## complete.cases function return TRUE/FALSE values for complete cases - sum to get number of complete cases
## list.files(path = "", pattern = "", full.names = TRUE)
fileslist <- list.files(path = directory, pattern = ".csv", full.names = TRUE)
nobs <- numeric()
for (i in id){
data < read.csv(fileslist[i])
nobs <- c(nobs, sum(complete.cases(data)))
}
data.frame(id, nobs)
}
complete("specdata", 1)
complete("specdata", c(1,2))
source('~/Documents/DataScience/Week 2 Assignment 1.2.R')
complete <- function(directory, id = 1:332) {
## return dataframe where nobs(number of complete cases) is given for every id
## complete.cases function return TRUE/FALSE values for complete cases - sum to get number of complete cases
## list.files(path = "", pattern = "", full.names = TRUE)
fileslist <- list.files(path = directory, pattern = ".csv", full.names = TRUE)
nobs <- numeric()
for (i in id){
data <- read.csv(fileslist[i])
nobs <- c(nobs, sum(complete.cases(data)))
}
data.frame(id, nobs)
}
complete("specdata", c(1,2))
complete("specdata", c(2,4,8,10,12))
complete("specdata", 30:25)
source('~/Documents/DataScience/Week 2 Assignment 1.3.R')
source('~/Documents/DataScience/Week 2 Assignment 1.3.R')
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## directory is a character vector of length 1 indicating location of CSV files
## threshold is a number vector of length 1 indicating number of completely observed observations
## (on all variables) required to compute correlation between nitrate and sulfate; default is 0
## return a numeric vector of correlations - do not round!
fileslist <- list.files(path = directory, pattern = ".csv", full.names = TRUE)
data <- numeric()
for (i in length(fileslist)) {
temp <- read.csv(fileslist[i])
temp <- temp[complete.cases(temp)]
csum <- nrow(temp)
if(csum > threshold){
data <- c(data, cor(temp$nitrate, temp$sulfate))
}
}
}
cr <- corr("specdata", 150)
source('~/Documents/DataScience/Week 2 Assignment 1.3.R')
cr <- corr("specdata", 150)
head(cr)
cr
source('~/Documents/DataScience/Week 2 Assignment 1.3.R')
cr <- corr("specdata", 150)
head(cr)
source('~/Documents/DataScience/Week 2 Assignment 1.3.R')
cr <- corr("specdata", 150)
head(cr)
?cor
complete("specdata")
source('~/Documents/DataScience/Week 2 Assignment 1.3.R')
cr <- corr("specdata", 150)
source('~/Documents/DataScience/Week 2 Assignment 1.3.R')
cr <- corr("specdata", 150)
head(cr)
source('~/Documents/DataScience/Week 2 Assignment 1.3.R')
cr <- corr("specdata", 150)
head(cr)
source('~/Documents/DataScience/Week 2 Assignment 1.3.R')
nobsdf <- complete("specdata")
nobsdf
nobsdf <- nobsdf[nobsdf$nobs > 0]
nobsdf <- nobsdf[nobsdf$nobs > 0,]
nobsdf
source('~/Documents/DataScience/Week 2 Assignment 1.3.R')
cr <- corr("specdata", 150)
head(cr)
?head
nobsdf$id
nobsdf < nobsdf[nobsdf$nobs > 0,]
nobsdf$id
source('~/Documents/DataScience/Week 2 Assignment 1.3.R')
cr <- corr("specdata", 150)
cr
head(cr)
summary(cr)
cr<- corr ("specdata", 400)
head(cr)
cr<- corr ("specdata", 5000)
summary(cr)
length(cr)
cr<- corr ("specdata")
summary(cr)
length(cr)
source('~/Documents/DataScience/Week 2 Assignment 1.3.R')
cube <- function (x,n) {}
cube <- function (x,n) {x^3}
cube(3)
x <- 1:10
if (x>5) {x<-0}
x <- 1:10
if (x >5) {x <- 0}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6,10,20,34,100,200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample (332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out<-round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n<-length(cr)
set.seed(197)
out<- c(n, round(cr[sample(n,5)], 4)
)
out<- c(n, round(cr[sample(n,5)], 4))
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
